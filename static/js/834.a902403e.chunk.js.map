{"version":3,"file":"static/js/834.a902403e.chunk.js","mappings":"yMAsBA,EAtBmB,SAAHA,GAA6B,IAAvBC,EAAeD,EAAfC,gBAQpB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAOC,SAASC,OAAOC,MAAMC,cAAcC,OAChEX,EAAgB,CAAEY,OAAQP,IAC1BF,EAAEU,cAAcC,OAClB,EAG+BC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEdL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,aAG5B,E,mCCqBA,EApCe,WAAO,IAADO,EACnBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEzB,EAAeyB,EAAA,GAC9BG,EAAiC,QAA7BN,EAAGK,EAAaE,IAAI,iBAAS,IAAAP,EAAAA,EAAI,GAC3CQ,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAN,EAAAA,EAAAA,GAAAI,EAAA,GAAvCG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHT,IACLU,EAAAA,EAAAA,IAAYV,GACTW,MAAK,SAAAC,GAAI,OAAIN,EAAaM,EAAKC,QAAQ,IACvCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAM,GACxC,GAAG,CAACf,IAEJ,IAAMrB,EAAW0B,EAAUY,KACzB,SAAA9C,GAAA,IAAG+C,EAAc/C,EAAd+C,eAAgBC,EAAEhD,EAAFgD,GAAIC,EAAajD,EAAbiD,cAAeC,EAAWlD,EAAXkD,YAAaC,EAAKnD,EAALmD,MAAK,OACtDF,IACEhC,EAAAA,EAAAA,KAAA,MAAAD,UACEd,EAAAA,EAAAA,MAACkD,EAAAA,GAAO,CAACC,GAAE,WAAAC,OAAaN,GAAMO,MAAO,CAAEC,KAAMpB,GAAWpB,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OACEwC,IAAG,kCAAAH,OAAoCJ,GACvCQ,IAAKP,KAEPlC,EAAAA,EAAAA,KAAA,KAAAD,SAAI+B,QANCC,EASV,IAGL,OACE9C,EAAAA,EAAAA,MAAA,OAAKyD,UAAU,YAAW3C,SAAA,EACxBC,EAAAA,EAAAA,KAAC2C,EAAU,CAAC3D,gBAAiBA,KAC7BgB,EAAAA,EAAAA,KAAA,MAAAD,SAAKR,MAGX,C","sources":["components/SearchForm/SearchForm.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["const SearchForm = ({ setSearchParams }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const inputValue = e.target.elements.search.value.toLowerCase().trim();\n    setSearchParams({ querty: inputValue });\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport { fetchSearch } from 'service/api';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const text = searchParams.get('querty') ?? '';\n  const [movieList, setMovieList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!text) return;\n    fetchSearch(text)\n      .then(data => setMovieList(data.results))\n      .catch(error => console.error(error));\n  }, [text]);\n\n  const elements = movieList.map(\n    ({ original_title, id, backdrop_path, poster_path, title }) =>\n      backdrop_path && (\n        <li key={id}>\n          <NavLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n            <p>{original_title}</p>\n          </NavLink>\n        </li>\n      )\n  );\n\n  return (\n    <div className=\"container\">\n      <SearchForm setSearchParams={setSearchParams} />\n      <ul>{elements}</ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","setSearchParams","_jsxs","onSubmit","e","preventDefault","inputValue","target","elements","search","value","toLowerCase","trim","querty","currentTarget","reset","children","_jsx","type","name","autoComplete","autoFocus","placeholder","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","text","get","_useState","useState","_useState2","movieList","setMovieList","location","useLocation","useEffect","fetchSearch","then","data","results","catch","error","console","map","original_title","id","backdrop_path","poster_path","title","NavLink","to","concat","state","from","src","alt","className","SearchForm"],"sourceRoot":""}